# -*- coding: utf-8 -*-
"""Tarefa6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1d1C-EG9S4NxdvQ34A2GJHgw4EdewYL0G
"""

# Commented out IPython magic to ensure Python compatibility.
# coding:utf8
import numpy as np
import matplotlib.pyplot as plt
import itertools
# %matplotlib inline
from matplotlib.backends.backend_pdf import PdfPages

def Energy(config,L):
  total_energy = 0
  for i in range(len(config)):
    for j in range(len(config)):
      S = config[i,j]
      nb = config[(i+1)%L,j] + config[i,(j+1)%L] + config[(i-1)%L,j] + config[i,(j-1)%L]
      total_energy += -nb*S
  return (total_energy/2)

Temp = np.linspace(0.1,5, 100)
Lspace = [2, 3, 4]
#colors = ['#ff3385', '#ffbf00', '#662200']
colors = ['#dd00ee', '#00ff00', '#0fd9ff']
#fig, ax = plt.subplots(5,1, figsize=(9,25))

for i,L in enumerate(Lspace):
  L2 = L*L
  mag_mean = []
  e_mean = []
  f_mean = []
  cv_mean = []
  xx_mean = []

  for k in range(len(Temp)):
    T = Temp[k]     
    E = 0
    peso = 0    
    Z    = 0   
    mag  = 0  
    mag2 = 0    
    e2   = 0   
    e    = 0
    for state in itertools.product([1,-1],repeat=L2):
      s = np.array(state).reshape((L,L))

      E = Energy(s, L)
      peso = np.exp(-E/T)                            
      Z = Z + peso                          
      e = e + (E/L2)*peso
      e2 = e2 +(E/L2)**2*peso

      mag = mag + abs(np.sum(s))/L2*peso
      mag2 = mag2 + ((np.sum(s))/L2)**2*peso

    xx_mean.append((L2/T)*(mag2/Z - (mag/Z)**2))
    cv_mean.append(L2/(T**2)*(e2/Z - (e/Z)**2))
    mag_mean.append(mag/Z)
    e_mean.append(e/Z)
    f_mean.append(-T/L2*np.log(Z))

  plt.figure(1, figsize=[8,4])
  plt.suptitle('Energia/Spin')
  plt.plot(Temp, e_mean, c=colors[i], label=f"L = {L}")
  plt.legend()
  plt.grid(b=False)
  plt.xlabel('T')
  plt.ylabel('<e>')
  plt.savefig("Tarefa-6-1-Antônio.pdf")

  plt.figure(2, figsize=[8,4])
  plt.plot(Temp, mag_mean, c=colors[i], label=f"L = {L}")
  plt.legend()
  plt.grid(b=False)
  plt.xlabel('T')
  plt.ylabel('<|m|>')
  plt.suptitle('Módulo da Magnetização/Spin')
  plt.savefig("Tarefa-6-2-Antônio.pdf")

  plt.figure(3, figsize=[8,4])
  plt.plot(Temp, cv_mean, c=colors[i], label=f"L = {L}")
  plt.legend()
  plt.grid(b=False)
  plt.xlabel('T')
  plt.ylabel('$c_v$')
  plt.suptitle('Calor Específico/Spin')
  plt.savefig("Tarefa-6-3-Antônio.pdf")

  plt.figure(4, figsize=[8,4])
  plt.plot(Temp, xx_mean, c=colors[i], label=f"L = {L}")
  plt.legend()
  plt.grid(b=False)
  plt.xlabel('T')
  plt.ylabel('$\chi$')
  plt.suptitle('Susceptibilidade Magnética/Spin')
  plt.savefig("Tarefa-6-4-Antônio.pdf")

  plt.figure(5, figsize=[8,4])
  plt.plot(Temp, f_mean, c=colors[i], label=f"L = {L}")
  plt.legend()
  plt.grid(b=False)
  plt.xlabel('T')
  plt.ylabel('$f$')
  plt.suptitle('Energia Livre/Spin')
  plt.savefig("Tarefa-6-5-Antônio.pdf")