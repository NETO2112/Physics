# -*- coding: utf-8 -*-
"""Tarefa11.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1znvkv0YPyd28w1TahmOnRdTc12eeObLZ
"""

# coding:utf8
import numpy as np
import matplotlib.pyplot as plt
import itertools
from random import random

def Energia(x, v, k=1, m=1):
  E = (k * x**2 + m * v**2)/2
  return E

dt = 0.08
t_list = np.arange(0., 60., dt)

# Método de Euler
x1_list = []
v1_list = []
E1_list = []
dE1_list = []
x = 1
v = 0

for t in t_list:
  # Cálculo da posição e velocidade no instante t
  F = -x
  x = x + v*dt
  x1_list.append(x)
  v = v + F*dt
  v1_list.append(v)

  # Cálculo da energia no instante t
  E = Energia(x, v) 
  E1_list.append(E)

# Cálculo de dE/E0 
E_0 = Energia(x1_list[0], v1_list[0])
for i in range(len(E1_list)):
  dE = (E1_list[i] - E_0) / E_0
  dE1_list.append(dE)

# Método de Velocity Verlet
x2_list = []
v2_list = []
E2_list = []
dE2_list = []
x = 1
v = 0

for t in t_list:
  # Cálculo da posição e velocidade no instante t
  F = -x
  v = v + (F * dt)/2
  x = x + v*dt
  x2_list.append(x)
  F = -x
  v = v + (F * dt)/2
  v2_list.append(v) 

  # Cálculo da energia no instante t
  E = Energia(x, v) 
  E2_list.append(E)

# Cálculo de dE/E0
E_0 = Energia(x2_list[0], v2_list[0])
for i in range(len(E2_list)):
  dE = (E2_list[i] - E_0) / E_0
  dE2_list.append(dE)

plt.figure(1, figsize=[8, 6])
plt.plot(x1_list, v1_list, c='#6600ff', label=f"Euler", linewidth=1)
plt.plot(x2_list, v2_list, c='#00ff00', label=f"Velocity Verlet", linewidth=1)
#plt.plot(x1_list, v1_list, c='#ff1a75', label=f"Euler", linewidth=1)
#plt.plot(x2_list, v2_list, c='#e6b800', label=f"Velocity Verlet", linewidth=1)
plt.legend()
plt.xlabel(r'$x(t)$')
plt.ylabel(r'$v(t)$')
plt.tight_layout()
plt.savefig("Tarefa-11-1-Antônio.pdf")

plt.figure(2, figsize=[8, 6])
plt.plot(t_list, dE1_list, c='#6600ff', label=f"Euler", linewidth=1)
plt.plot(t_list, dE2_list, c='#00ff00', label=f"Velocity Verlet", linewidth=1)
#plt.plot(t_list, dE1_list, c='#ff1a75', label=f"Euler", linewidth=1)
#plt.plot(t_list, dE2_list, c='#e6b800', label=f"Velocity Verlet", linewidth=1)
plt.legend()
plt.xlabel(r'$t$')
plt.ylabel(r'$\Delta E(t) / E_{o} $')
plt.tight_layout()
plt.savefig("Tarefa-11-2-Antônio.pdf")